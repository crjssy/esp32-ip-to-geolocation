name: Build and Test Application

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IDF_PATH: /opt/esp/idf
  test_dirs: .

defaults:
  run:
    shell: bash

jobs:
  build-test-app:
    name: Build Test App
    strategy:
      fail-fast: false
      matrix:
        idf-branch:
          - release-v5.0
          - release-v5.1
        target:
          - esp32
    runs-on: ubuntu-22.04
    container:
      image: espressif/idf:${{ matrix.idf-branch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Python Dependencies
        run: |
          . $IDF_PATH/export.sh
          python -m pip install idf-build-apps
      - name: Confirm IDF Path
        run: |
          echo "IDF_PATH is set to: $IDF_PATH"
          ls -l $IDF_PATH
      - name: Export IDF
        run: |
          . $IDF_PATH/export.sh
          echo "IDF exported successfully"
      - name: Clean previous build files
        run: |
          . $IDF_PATH/export.sh
          idf.py fullclean
      - name: Build Test Application with ESP-IDF
        run: |
          . $IDF_PATH/export.sh
          echo "Starting build process..."
          idf.py -DSDKCONFIG=/__w/esp32-ip-to-geolocation/esp32-ip-to-geolocation/sdkconfig build > build_output.log 2>&1
      - name: Output build log
        run: |
          echo "Build output log:"
          cat build_output.log
      - name: List all files in the current directory
        run: |
          echo "Listing all files in the current directory:"
          find . -type f -print
      - name: List build directory
        run: |
          echo "Listing build directory"
          ls -R build
      - name: Check for necessary files
        run: |
          if [ ! -f build/flasher_args.json ]; then
            echo "Error: build/flasher_args.json not found!"
            exit 1
          fi
          if [ ! -f build/esp32-ip-to-geolocation.elf ]; then
            echo "Error: build/esp32-ip-to-geolocation.elf not found!"
            exit 1
      - name: Upload files to artifacts for run-target job
        uses: actions/upload-artifact@v3
        with:
          name: built_binaries_${{ matrix.target }}_${{ matrix.idf-branch }}
          path: |
            **/build**/bootloader/bootloader.bin
            **/build**/partition_table/partition-table.bin
            **/build**/*.bin
            **/build**/*.elf
            **/build**/flasher_args.json
          if-no-files-found: error

  simulate-test:
    name: Simulate Test on WokWi
    needs: build-test-app
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        idf-branch:
          - release-v5.0
          - release-v5.1
        target:
          - esp32
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Download built binaries from build job
        uses: actions/download-artifact@v3
        with:
          name: built_binaries_${{ matrix.target }}_${{ matrix.idf-branch }}
      - name: Verify downloaded files
        run: |
          if [ ! -f build/flasher_args.json ]; then
            echo "Error: build/flasher_args.json not found!"
            exit 1
          fi
          if [ ! -f build/esp32-ip-to-geolocation.elf ]; then
            echo "Error: build/esp32-ip-to-geolocation.elf not found!"
            exit 1
      - name: Install Python packages for PyTest
        run: pip install -r requirements.txt
      - name: Set WokWi Token (GitHub environment secret `WOKWI_CLI_TOKEN`)
        run: echo "WOKWI_CLI_TOKEN=${{ secrets.WOKWI_CLI_TOKEN }}" >> $GITHUB_ENV
      - name: Run Test App in WokWi Simulator
        run: |
          pytest ${{ env.test_dirs }} \
            --embedded-services idf,wokwi \
            --tb short \
            --junit-xml test_wokwi_${{ matrix.target }}_${{ matrix.idf-branch }}.xml
      - uses: actions/upload-artifact@v3
        with:
          name: test_wokwi_${{ matrix.target }}_${{ matrix.idf-branch }}_junit
          path: test_wokwi_${{ matrix.target }}_${{ matrix.idf-branch }}.xml

  publish-results:
    name: Publish Test App results
    needs: simulate-test
    runs-on: ubuntu-22.04
    steps:
      - name: Download Test results
        uses: actions/download-artifact@v3
        with:
          path: test_results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test_results/**/*.xml
